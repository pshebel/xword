// Code generated by go-swagger; DO NOT EDIT.

package words

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetWordsParams creates a new GetWordsParams object
// no default values defined in spec.
func NewGetWordsParams() GetWordsParams {

	return GetWordsParams{}
}

// GetWordsParams contains all the bound params for the get words operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetWords
type GetWordsParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*returns words of a certain length
	  In: query
	*/
	Length *int64
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetWordsParams() beforehand.
func (o *GetWordsParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qLength, qhkLength, _ := qs.GetOK("length")
	if err := o.bindLength(qLength, qhkLength, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindLength binds and validates parameter Length from query.
func (o *GetWordsParams) bindLength(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("length", "query", "int64", raw)
	}
	o.Length = &value

	return nil
}
